@using HobbyHubSystem.Common;
@using HobbyHubSystem.Web.ViewModels.Category;
@model DisplayCategoryViewModel

@{
    ViewData["Title"] = "Category: " + Model.Name;
}

<h2>@Model.Name</h2>

<div class="hobbies-container">
    @foreach (var hobby in Model.Hobbies)
    {
        if (hobby.IsApproved == true)
        {
        <div class="hobby">
            <img src="@hobby.ImageUrl" alt="@hobby.Name" />
            <p>@hobby.Name</p>
            <a asp-controller="Hobby" asp-action="OpenHobby" asp-route-id="@hobby.HobbyId">Open Hobby</a>
        </div>
            
        }
    }
</div>

@if (User.Identity.IsAuthenticated)
{
    <div class="add-hobby-button-container">
        <a asp-controller="Hobby" asp-action="AddHobby" asp-route-id="@Model.CategoryId">Add Hobby</a>
    </div>
}

@if (User.IsInRole(RoleConstants.Administrator) || User.IsInRole(RoleConstants.Moderator))
{
    <div class="add-hobby-button-container">
        <a asp-controller="Category" asp-action="EditCategory" asp-route-id="@Model.CategoryId">Edit Category</a>
    </div>
    <div class="add-hobby-button-container">
        <a asp-controller="Category" asp-action="Delete" asp-route-id="@Model.CategoryId">Delete Category</a>
    </div>
}

<div class="back-to-all-categories">
    <a asp-controller="Category" asp-action="All">Back to All Categories</a>
</div>

<style>
    .hobbies-container {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-gap: 20px;
    }

    .hobby {
        text-align: center;
    }

        .hobby img {
            max-width: 200px;
            max-height: 200px;
        }

    .add-hobby-button-container {
        display: flex;
        justify-content: center;
        margin-top: 25px;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}